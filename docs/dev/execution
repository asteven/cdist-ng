## execute shell script ##

### locally ###
- set default file permisisons using umask (os.umask(0o077))
- create local directory
- remove local directory
- run shell script (/bin/sh -e)
   - setup environment in python (os.environ)
- run executable
   - setup environment in python (os.environ)


### remotely ###
- create remote directory
- remove remote directory
- run shell script (/bin/sh -e)
   - setup environment by prepending key=value pairs before the command
- run executable
   - setup environment by prepending key=value pairs before the command


### conclusion ###
The only differences between running locally vs remotely are:
- how environment variables are passed
- how directories are created and removed


It should be possible to create a generic base class with common functionallity.
This would cut on redundant code and ensure a common/consistent interface between
local and remote.


--------------------------------------------------------------------------------

## use case: global explorers ##

### execution sequence ###
- transfer all global explorers in parallel
- run all global explorers in parallel
- save result of running global explorers to target dir

